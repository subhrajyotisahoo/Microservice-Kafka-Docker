name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build all microservices JARs
        run: |
          mvn -f user-service/pom.xml clean package -DskipTests
          mvn -f product-service/pom.xml clean package -DskipTests
          mvn -f order-service/pom.xml clean package -DskipTests
          mvn -f notification-service/pom.xml clean package -DskipTests
          mvn -f Eureka-Server/pom.xml clean package -DskipTests

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/ec2-user/InventoryMangementProject"
          strip_components: 1

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user/InventoryMangementProject
            docker-compose down
            ./mvnw -f user-service/pom.xml clean package -DskipTests
            ./mvnw -f product-service/pom.xml clean package -DskipTests
            ./mvnw -f order-service/pom.xml clean package -DskipTests
            ./mvnw -f notification-service/pom.xml clean package -DskipTests
            ./mvnw -f eureka-server/pom.xml clean package -DskipTests
            docker-compose build
            docker-compose up -d
